# Generated by Django 5.2 on 2025-05-24 08:10

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("full_name", models.CharField(max_length=255)),
                (
                    "role",
                    models.CharField(
                        choices=[("student", "Student"), ("teacher", "Teacher")],
                        max_length=10,
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        help_text="11-digit contact number, required for all users.",
                        max_length=11,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Phone number must be exactly 11 digits.",
                                regex="^\\d{11}$",
                            )
                        ],
                    ),
                ),
                (
                    "varsity_id",
                    models.CharField(
                        blank=True,
                        help_text="8-digit student ID, only for students.",
                        max_length=8,
                        null=True,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Varsity ID must be exactly 8 digits.",
                                regex="^\\d{8}$",
                            )
                        ],
                    ),
                ),
                (
                    "session",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("2025-26", "2025-26"),
                            ("2024-25", "2024-25"),
                            ("2023-24", "2023-24"),
                            ("2022-23", "2022-23"),
                            ("2021-22", "2021-22"),
                            ("2020-21", "2020-21"),
                            ("2019-20", "2019-20"),
                            ("2018-19", "2018-19"),
                            ("2017-18", "2017-18"),
                            ("2016-17", "2016-17"),
                            ("2015-16", "2015-16"),
                        ],
                        help_text="Academic session (e.g., 2020-21) for students.",
                        max_length=7,
                        null=True,
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("male", "Male"), ("female", "Female")],
                        help_text="Select gender: male=Male, female=Female (students only)",
                        max_length=6,
                        null=True,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
